name: Tests
on:
  push:
    branches:
      - "*"
    paths-ignore:
      - "*.adoc"
  pull_request:
    paths-ignore:
      - "*.adoc"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Install OpenFaaS CLI
        run: curl -sSL https://cli.openfaas.com | sudo -E sh
      - name: Build a Function for each language from scratch and invoke it
        run: |
          mkdir test
          cd test
          faas template pull https://github.com/${{ github.repository_owner }}/faas-bb#${{ github.head_ref || github.ref_name }} 

          faas new --lang bb-streaming my-bb-streaming-function --prefix ghcr.io/${{ github.repository_owner }}
          faas build -f my-bb-streaming-function.yml
          if [ "$(echo "Hello world" | docker run -i ghcr.io/${{ github.repository_owner }}/my-bb-streaming-function:latest ./index.clj)" != "Hello world" ]; then
            exit 1
          fi

          faas new --lang bb my-bb-http-function --prefix ghcr.io/${{ github.repository_owner }}
          faas build -f my-bb-http-function.yml
          (docker stop my-bb-http-function || exit 0)
          (docker rm my-bb-http-function || exit 0)
          docker run -d --name my-bb-http-function ghcr.io/${{ github.repository_owner }}/my-bb-http-function:latest bb --main index
          if [ "$(docker exec my-bb-http-function curl -X POST --data-raw "Hello world" --retry 3 --retry-delay 2 --retry-connrefused http://127.0.0.1:8082)" != "Hello world" ]; then
            exit 2
          fi
      - name: Build provided Function examples and invoke them
        env:
          DOCKER_REGISTRY_IMG_ORG_PATH: ghcr.io/${{ github.repository_owner }}
        run: |
          git clone https://github.com/${{ github.repository_owner }}/faas-bb.git
          cd faas-bb
          git checkout ${{ github.head_ref || github.ref_name }}
          cd examples
          faas template pull https://github.com/${{ github.repository_owner }}/faas-bb#${{ github.head_ref || github.ref_name }}
          faas build

          if [ "$(echo world | docker run -i ghcr.io/${{ github.repository_owner }}/bb-streaming-hello:latest ./index.clj)" != "Hello, world" ]; then
              exit 3
          fi

          if [ "$(echo '{"a" {"b" 10}}' | docker run -i ghcr.io/${{ github.repository_owner }}/bb-streaming-lib:latest ./index.clj)" != "[10]" ]; then
              exit 4
          fi

          if [ -n "$(echo '{"a" 10}' | docker run -i ghcr.io/${{ github.repository_owner }}/bb-streaming-lib:latest ./index.clj)" ]; then
              exit 5
          fi

          docker run -i ghcr.io/${{ github.repository_owner }}/bb-streaming-lib:latest function/handler-test.clj

          (docker stop bb-http-map || exit 0)
          (docker rm bb-http-map || exit 0)
          docker run -d --name bb-http-map ghcr.io/${{ github.repository_owner }}/bb-http-map:latest bb --main index
          if [ "$(docker exec bb-http-map curl -X POST --data-raw '{"foo": "bar", "spam": "eggs"}' --retry 3 --retry-delay 2 --retry-connrefused http://127.0.0.1:8082)" != '[["foo","spam"],["bar","eggs"]]' ]; then
            exit 6
          fi

          (docker stop bb-http-map-context || exit 0)
          (docker rm bb-http-map-context || exit 0)
          docker run -d --name bb-http-map-context ghcr.io/${{ github.repository_owner }}/bb-http-map-context:latest bb --main index
          if [ "$(docker exec bb-http-map-context curl -X POST --data-raw '{"foo": "bar", "spam": "eggs"}' --retry 3 --retry-delay 2 --retry-connrefused http://127.0.0.1:8082)" != '[["foo","spam"],["bar","eggs"],"application/json",true]' ]; then
            exit 7
          fi
